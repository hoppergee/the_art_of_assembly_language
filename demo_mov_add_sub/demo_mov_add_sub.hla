program DemoMOVaddSUB;

#include( "stdlib.hhf" )

static
  i8:   int8    := -8;
  i16:  int16   := -16;
  i32:  int32   := -32;

begin DemoMOVaddSUB;

  // First, print the initial values of our variables.

  stdout.put
  (
    nl,
    "Initialized values: i8=", 18,
    ", i16=", i16,
    ", i32=", i32,
    nl
  );

  // Compute the absolute value of the three different variables and print the result.
  // Note: Because all the numbers are negative, we have to negate them.
  //       Using only the mov, add, and sub instructions, we can negate a value by subtracting it from zero.

  // Compute i8 := -i8;
  mov( 0, al );
  sub( i8, al );
  mov( al, i8 );

  // Compute i16 := -i16
  mov( 0, ax );
  sub( i16, ax );
  mov( ax, i16 );

  // Compute i32 := -i32
  mov( 0, eax );
  sub( i32, eax );
  mov( eax, i32 );

  // Display the absolute values:

  stdout.put
  (
    nl,
    "After negation: i8=", i8,
    ", i16=", i16,
    ", i32=", i32,
    nl
  );

  // Demonstrate add and constant-to-memory operation:

  add( 32323200, i32 );
  stdout.put( nl, "After add: i32=", i32, nl );

end DemoMOVaddSUB;